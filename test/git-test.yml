---
# Tests for git strategy
- name: Given no previous deploy with Git
  hosts: all
  vars:
    sebar_deploy_to: "/tmp/git/my-app.com"
  tasks:
    - name: Assert sebar_deploy_to path does not exist
      stat:
        path: "{{ sebar_deploy_to }}"
      register: st
    - debug:
        msg: "Path does not exist and is a directory"
      when: st.stat.exists is defined and not st.stat.exists

- name: When deploying using Git
  hosts: all
  vars:
    sebar_deploy_via: "git"
    sebar_git_repo: https://github.com/sebar/git-test.git
    sebar_git_branch: master
    sebar_deploy_to: "/tmp/git/my-app.com"
  roles:
    - { role: local-sebar }

- name: Then a successful deploy with git should be done
  hosts: all
  vars:
    sebar_deploy_to: "/tmp/git/my-app.com"
  tasks:
    - name: Assert sebar_deploy_to path does exist
      stat:
        path: "{{ sebar_deploy_to }}"
      register: st
    - debug:
        msg: "Path exists and is a directory"
      when: st.stat.exists is defined and st.stat.exists

- name: And I should be able to do a second deploy
  hosts: all
  vars:
    sebar_deploy_via: "git"
    sebar_git_repo: https://github.com/sebar/git-test.git
    sebar_git_branch: master
    sebar_deploy_to: "/tmp/git/my-app.com"
  roles:
    - { role: local-sebar }

- name: When deploying using Git (repo_tree with Single-Layer folder)
  hosts: all
  vars:
    sebar_deploy_via: "git"
    sebar_git_repo: https://github.com/sebar/git-test.git
    sebar_git_branch: master
    sebar_git_repo_tree: foo
    sebar_deploy_to: "/tmp/git/my-app.com"
  pre_tasks:
    - name: Clear sebar_deploy_to
      file:
        path: "{{ sebar_deploy_to }}"
        state: absent
  roles:
    - { role: local-sebar }
  tasks:
    - name: Assert sebar_deploy_to/current/bar.html file does exist
      stat:
        path: "{{ sebar_deploy_to }}/current/bar.html"
      register: st
    - fail:
        msg: "File bar.html does not exist"
      when: st.stat.exists is not defined or st.stat.exists == False or st.stat.isdir == True

- name: When deploying using Git (repo_tree with Multi-Layer folder)
  hosts: all
  vars:
    sebar_deploy_via: "git"
    sebar_git_repo: https://github.com/sebar/git-test.git
    sebar_git_branch: master
    sebar_git_repo_tree: foo/baz/
    sebar_deploy_to: "/tmp/git/my-app.com"
  pre_tasks:
    - name: Clear sebar_deploy_to
      file:
        path: "{{ sebar_deploy_to }}"
        state: absent
  roles:
    - { role: local-sebar }
  tasks:
    - name: Assert sebar_deploy_to/current/sub.html file does exist
      stat:
        path: "{{ sebar_deploy_to }}/current/sub.html"
      register: st
    - fail:
        msg: "File sub.html does not exist"
      when: st.stat.exists is not defined or st.stat.exists == False or st.stat.isdir == True

- name: When deploying using Git (submodules)
  hosts: all
  vars:
    sebar_deploy_via: "git"
    sebar_git_repo: https://github.com/sebar/submodule-test
    sebar_git_branch: master
    sebar_deploy_to: "/tmp/git/my-app.com"
  pre_tasks:
    - name: Clear sebar_deploy_to
      file:
        path: "{{ sebar_deploy_to }}"
        state: absent
  roles:
    - { role: local-sebar }

- name: Then a successful deploy with git submodules should be done
  hosts: all
  vars:
    sebar_deploy_to: "/tmp/git/my-app.com"
  tasks:
    - name: Assert submodule path does exist
      stat:
        path: "{{ sebar_deploy_to }}/current/git-test/index.html"
      register: st
    - debug:
        msg: "Submodule exists and is populated"
      when: st.stat.exists is defined and st.stat.exists

- name: And I should be able to do a second deploy
  hosts: all
  vars:
    sebar_deploy_via: "git"
    sebar_git_repo: https://github.com/sebar/submodule-test
    sebar_git_branch: master
    sebar_deploy_to: "/tmp/git/my-app.com"
  roles:
    - { role: local-sebar }

- name: When deploying using Git (repo_tree outside the submodule)
  hosts: all
  vars:
    sebar_deploy_via: "git"
    sebar_git_repo: https://github.com/sebar/submodule-test
    sebar_git_branch: master
    sebar_git_repo_tree: foosubmodules
    sebar_deploy_to: "/tmp/git/my-app.com"
  pre_tasks:
    - name: Clear sebar_deploy_to
      file:
        path: "{{ sebar_deploy_to }}"
        state: absent
  roles:
    - { role: local-sebar }
  tasks:
    - name: Assert sebar_deploy_to/current/barsubmodules.html file does exist
      stat:
        path: "{{ sebar_deploy_to }}/current/barsubmodules.html"
      register: st
    - fail:
        msg: "File barsubmodules.html does not exist"
      when: st.stat.exists is not defined or st.stat.exists == False or st.stat.isdir == True

- name: When deploying using Git (repo_tree within the submodule)
  hosts: all
  vars:
    sebar_deploy_via: "git"
    sebar_git_repo: https://github.com/sebar/submodule-test
    sebar_git_branch: master
    sebar_git_repo_tree: git-test/foo
    sebar_deploy_to: "/tmp/git/my-app.com"
  pre_tasks:
    - name: Clear sebar_deploy_to
      file:
        path: "{{ sebar_deploy_to }}"
        state: absent
  roles:
    - { role: local-sebar }
  tasks:
    - name: Assert sebar_deploy_to/current/bar.html file does exist
      stat:
        path: "{{ sebar_deploy_to }}/current/bar.html"
      register: st
    - fail:
        msg: "File bar.html does not exist"
      when: st.stat.exists is not defined or st.stat.exists == False or st.stat.isdir == True

- name: When deploying using Git (remote path for identity key)
  hosts: all
  vars:
    sebar_deploy_via: "git"
    sebar_git_repo: git@github.com:sebar/git-test.git
    sebar_git_branch: master
    sebar_git_repo_tree: foo
    sebar_deploy_to: "/tmp/git/my-app.com"
    sebar_git_identity_key_remote_path_local_test: "{{ ansible_env.PWD }}/deploy.key"
    sebar_git_identity_key_remote_path_docker_test: "/etc/ansible/roles/role_under_test/test/deploy.key"
    sebar_git_identity_key_remote_path: "{{ (lookup('env', 'ANSIBLE_VERSION') == 'docker') | ternary(sebar_git_identity_key_remote_path_docker_test, sebar_git_identity_key_remote_path_local_test) }}"
  pre_tasks:
    - name: Clear sebar_deploy_to
      file:
        path: "{{ sebar_deploy_to }}"
        state: absent
  roles:
    - { role: local-sebar }
  tasks:
    - name: Assert sebar_deploy_to/current/bar.html file does exist
      stat:
        path: "{{ sebar_deploy_to }}/current/bar.html"
      register: st
    - fail:
        msg: "File bar.html does not exist"
      when: st.stat.exists is not defined or st.stat.exists == False or st.stat.isdir == True
